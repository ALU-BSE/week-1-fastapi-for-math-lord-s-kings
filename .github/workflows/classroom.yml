name: Test FastAPI Assignment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio httpx

    - name: Run Tests
      run: pytest

    - name: Test FastAPI Endpoints
      run: |
        echo "Running FastAPI endpoint tests..."
        pytest --disable-warnings

# Sample pytest file (tests/test_main.py)

# Create a `tests/` directory in the repository
# Add the following code in `tests/test_main.py`

# tests/test_main.py

import pytest
from fastapi.testclient import TestClient
from main import app, f
import numpy as np

client = TestClient(app)

def test_function_numpy():
    x = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    M = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]])
    B = np.array([[1], [1], [1]])
    expected = np.dot(M, x) + B
    assert np.array_equal(f(x), expected), "Function with NumPy failed."

def test_function_no_numpy():
    x = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
    M = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
    B = [[1], [1], [1]]
    # Manual matrix multiplication + addition
    expected = [[sum(a * b for a, b in zip(row, col)) + b_row[0]
                for col, b_row in zip(zip(*M), B)] for row in x]
    assert f(x) == expected, "Function without NumPy failed."

def test_sigmoid_function():
    def sigmoid(x):
        return 1 / (1 + np.exp(-x))

    x = np.array([[0, 1], [-1, 2]])
    expected = sigmoid(x)
    result = f(x)
    assert np.allclose(result, expected), "Sigmoid function failed."

# Test FastAPI endpoint functionalit

def test_endpoint():
    response = client.post("/endpoint", json={"data": [[1, 2], [3, 4]]})
    assert response.status_code == 200, "Endpoint failed."
    assert "result" in response.json(), "Response missing 'result' key."
